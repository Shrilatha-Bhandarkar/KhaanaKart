spring.application.name=OnlineFoodOrderingSystem

# Configures the URL for the MySQL database connection
spring.datasource.url=jdbc:mysql://localhost:3306/food_ordering_system

# Sets the database username and password for authentication
spring.datasource.username=root
spring.datasource.password=shriBH7497@

# Defines the strategy for Hibernate schema management; "update" keeps the database schema in sync with the entity models
spring.jpa.hibernate.ddl-auto=update

# Enables logging of SQL queries executed by Hibernate
spring.jpa.show-sql=true

# Formats SQL queries in the logs for better readability
spring.jpa.properties.hibernate.format_sql=true
jwt.secret=jwt.secret=abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ



spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp


# ------ Logging Configuration ------
logging.level.root=INFO
logging.level.com.onlinefoodorder=DEBUG  # Logs detailed info for our project

#Log file location and naming
logging.file.path=logs
logging.file.name=${logging.file.path}/food-ordering.log

#Rolling file policy (Creates new files daily and limits file size)
logging.logback.rollingpolicy.file-name-pattern=${logging.file.name}-%d{yyyy-MM-dd}-%i.log
logging.logback.rollingpolicy.max-file-size=10MB  # Increased size since food orders generate more logs
logging.logback.rollingpolicy.total-size-cap=100MB  # Limits log storage usage
